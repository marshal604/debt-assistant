{"version":3,"sources":["group/containers/GroupDetail/GroupDetail.model.ts","shared/layout/Card/CardHeader/CardHeader.tsx","shared/layout/Card/CardBody/CardBody.tsx","shared/layout/Card/CardFooter/CardFooter.tsx","shared/layout/Card/Card.tsx","shared/layout/Page/Page.tsx","auth/containers/LoginPage/LoginPage.tsx","shared/forms/Input/Input.model.ts","group/model/Group.model.ts","shared/forms/Dropdown/Dropdown.tsx","group/containers/GroupDetail/GroupDetail.tsx","auth/components/UserInfo/UserInfo.tsx","group/components/GroupOverview/GroupOverviewItem/GroupOverviewItem.tsx","group/components/GroupOverview/GroupOverview.tsx","auth/containers/UserPage/UserPage.tsx","group/components/GroupSettingForm/GroupSettingForm.model.ts","shared/forms/Input/Input.tsx","group/components/GroupSettingForm/GroupSettingForm.tsx","group/containers/GroupSetting/GroupSetting.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["DebtStatus","CardHeader","props","className","children","CardBody","CardFooter","Card","classes","join","header","body","footer","Page","Fragment","central","LoginPage","type","Component","InputType","GroupRole","Dropdown","state","opened","element","document","createElement","blurEvent","event","contains","target","collapse","onChange","item","change","expand","setState","window","addEventListener","this","removeEventListener","ref","el","label","onClick","data-toggle","selected","options","find","id","name","map","key","GroupDetail","items","fetchDate","setTimeout","title","groupId","creditorId","debtorId","status","Pending","currency","dropdownChange","console","log","UserInfo","to","GroupOverviewItem","stakeholders","length","balance","GroupOverview","UserPage","managers","getRoleOptions","Manager","Member","getDefaultGroupSettingForm","inputType","Input","config","placeholder","value","getStakeholders","useLabel","person","role","option","onInput","htmlFor","$event","GroupSettingForm","addStakeholder","concat","removeStakeholder","index","filter","_","pos","onNameChange","onStakeHoldersIdChange","slice","onRoleChange","onSubmit","Math","random","alert","submitted","disabled","stakeholder","isDisabledSubmit","isNameEmpty","isAnyStakeHolderEmpty","some","GroupSetting","form","match","params","App","basename","path","component","from","exact","Boolean","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f782c67e.chunk.js","sourcesContent":["export interface GroupDetailPageState {\n  items: DebtItem[];\n}\n\nexport interface DebtItem {\n  id: string;\n  title: string;\n  groupId: string;\n  creditorId: string;\n  debtorId: string;\n  status: DebtStatus;\n  currency: number;\n}\n\nexport enum DebtStatus {\n  Pending = 1,\n  PayOff = 2\n}\n","import React, { FunctionComponent } from 'react';\n\nconst CardHeader: FunctionComponent = (props) => (\n  <div className=\"card-header\">{props.children}</div>\n);\n\nexport default CardHeader;\n","import React, { FunctionComponent } from 'react';\n\nconst CardBody: FunctionComponent = (props) => <div className=\"card-body\">{props.children}</div>;\n\nexport default CardBody;\n","import React, { FunctionComponent } from 'react';\n\nconst CardFooter: FunctionComponent = (props) => (\n  <div className=\"card-footer\">{props.children}</div>\n);\n\nexport default CardFooter;\n","import React, { FunctionComponent } from 'react';\nimport CardHeader from './CardHeader/CardHeader';\nimport CardBody from './CardBody/CardBody';\nimport CardFooter from './CardFooter/CardFooter';\nimport { CardProps } from './Card.model';\nconst Card: FunctionComponent<CardProps> = props => (\n  <div className={['card', ...(props.classes || [])].join(' ')}>\n    {props.header ? <CardHeader>{props.header}</CardHeader> : null}\n    <CardBody>{props.body}</CardBody>\n    {props.footer ? <CardFooter>{props.footer}</CardFooter> : null}\n  </div>\n);\n\nexport default Card;\n","import React, { FunctionComponent } from 'react';\n\nimport { PageProps } from './Page.model';\n\nconst Page: FunctionComponent<PageProps> = props => {\n  return (\n    <React.Fragment>\n      {props.central ? (\n        <div className=\"position-relative h-100 row justify-content-center align-items-center\">\n          <div className=\"col-12\">\n            <div className=\"row justify-content-center\">\n              <div className=\"col-12 col-lg-10 col-xl-8\">{props.children}</div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className=\"row\">\n          <div className=\"col-12\">{props.children}</div>\n        </div>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Page;\n","import React, { Component } from 'react';\nimport Card from 'src/shared/layout/Card/Card';\n\nimport Page from 'src/shared/layout/Page/Page';\n\nclass LoginPage extends Component {\n  render() {\n    return (\n      <Page central={true}>\n        <Card\n          header={<div className=\"text-center\">選擇你要登入的帳號</div>}\n          body={\n            <div className=\"d-flex flex-column\">\n              <button type=\"button\" className=\"btn btn-primary\">\n                登入方式一\n              </button>\n              <button type=\"button\" className=\"btn btn-secondary mt-3\">\n                登入方式二\n              </button>\n            </div>\n          }\n        ></Card>\n      </Page>\n    );\n  }\n}\n\nexport default LoginPage;\n","export interface InputProps {\n  inputType: InputType;\n  config: InputConfig;\n  value: any;\n  label?: string;\n  change?: (value: string) => void;\n}\n\nexport enum InputType {\n  Input = 1,\n  Textarea\n}\n\nexport interface InputConfig {\n  placeholder: string;\n  type: string;\n  id?: string;\n  [key: string]: any;\n}\n","export enum GroupRole {\n  Manager = 1,\n  Member = 2\n}\n","import React, { Component } from 'react';\nimport { DropdownProps, DropdownState } from './Dropdown.model';\nimport './Dropdown.scss';\nimport { OptionItem } from 'src/shared/forms/forms.model';\nclass Dropdown extends Component<DropdownProps, DropdownState> {\n  state = {\n    opened: false\n  };\n  element: HTMLDivElement = document.createElement('div');\n\n  blurEvent = (event: MouseEvent) => {\n    if (!this.element.contains(event.target as HTMLElement)) {\n      this.collapse();\n    }\n  };\n\n  onChange = (item: OptionItem<number>) => {\n    if (this.props.change) {\n      this.props.change(item);\n    }\n    this.collapse();\n  };\n\n  expand = () => {\n    this.setState({\n      opened: true\n    });\n  };\n\n  collapse = () => {\n    this.setState({\n      opened: false\n    });\n  };\n\n  componentDidMount() {\n    window.addEventListener('click', this.blurEvent);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('click', this.blurEvent);\n  }\n\n  render() {\n    return (\n      <div className=\"Dropdown dropdown\" ref={el => (this.element = el as HTMLDivElement)}>\n        {this.props.label ? <div className=\"mb-2\">{this.props.label}</div> : null}\n        <button\n          type=\"button\"\n          onClick={this.expand}\n          className=\"btn btn-primary dropdown-toggle d-flex align-items-center\"\n          data-toggle=\"dropdown\"\n        >\n          {this.props.selected ? <div>{this.props.options.find(item => item.id === this.props.selected)?.name}</div> : this.props.children}\n        </button>\n        <div className={this.state.opened ? 'show dropdown-menu' : 'dropdown-menu'}>\n          {this.props.options.map(item => (\n            <div key={item.id} className=\"dropdown-item\" onClick={() => this.onChange(item)}>\n              {item.name}\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Dropdown;\n","import React, { Component } from 'react';\n\nimport { GroupDetailPageState, DebtItem, DebtStatus } from './GroupDetail.model';\nimport { OptionItem } from 'src/shared/forms/forms.model';\nimport Card from 'src/shared/layout/Card/Card';\nimport Dropdown from 'src/shared/forms/Dropdown/Dropdown';\nimport Page from 'src/shared/layout/Page/Page';\nimport './GroupDetail.scss';\nclass GroupDetail extends Component<{}, GroupDetailPageState> {\n  state = {\n    items: [],\n    options: [\n      { id: 1, name: 'Dunning Notice' },\n      { id: 2, name: 'Mark Pay Off' }\n    ]\n  };\n\n  componentDidMount() {\n    this.fetchDate();\n  }\n\n  render() {\n    return (\n      <Page>\n        <div className=\"row GroupDetail\">\n          {this.state.items.map((item: DebtItem) => {\n            return (\n              <div className=\"col-12 col-md-6 col-xl-4 my-2\">\n                <Card\n                  key={item.id}\n                  header={\n                    <div className=\"d-flex align-items-center justify-content-between\">\n                      <div>{item.title}</div>\n                      <Dropdown options={this.state.options} change={this.dropdownChange}>\n                        選擇行為\n                      </Dropdown>\n                    </div>\n                  }\n                  body={\n                    <div>\n                      <ul>\n                        <li>Status: {item.status}</li>\n                        <li>Debt: {item.currency}</li>\n                        <li>Debtor: {item.debtorId}</li>\n                        <li>Creditor: {item.creditorId}</li>\n                      </ul>\n                    </div>\n                  }\n                ></Card>\n              </div>\n            );\n          })}\n        </div>\n      </Page>\n    );\n  }\n\n  fetchDate = () => {\n    setTimeout(() => {\n      this.setState({\n        items: [1, 2, 3, 4, 5, 6, 7].map(item => ({\n          id: `test${item}`,\n          title: `test${item}`,\n          groupId: `test${item}`,\n          creditorId: `creditor${item}`,\n          debtorId: `debtor${item}`,\n          status: DebtStatus.Pending,\n          currency: item * 1000\n        }))\n      });\n    }, 1000);\n  };\n\n  dropdownChange(item: OptionItem<number>) {\n    console.log(item);\n  }\n}\n\nexport default GroupDetail;\n","import React, { FunctionComponent } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst UserInfo: FunctionComponent = props => (\n  <React.Fragment>\n    <ul className=\"UserInfo\">\n      <li className=\"d-flex align-items-center justify-content-md-start justify-content-between\">\n        <p className=\"col-md-3\">ID</p>\n        <p className=\"ml-md-2 font-weight-bold text-nowrap\">SAOPJDOPWQDJ12</p>\n      </li>\n      <li className=\"d-flex align-items-center justify-content-md-start justify-content-between mt-3\">\n        <p className=\"col-md-3\">名字</p>\n        <p className=\"ml-md-2 font-weight-bold text-nowrap\">小王</p>\n      </li>\n      <li className=\"d-flex align-items-center justify-content-md-start justify-content-between mt-3\">\n        <p className=\"col-md-3\">目前狀態</p>\n        <p className=\"ml-md-2 font-weight-bold text-nowrap\">-1000 TWD</p>\n      </li>\n      <li className=\"d-flex align-items-center justify-content-end mt-3\">\n        <button type=\"button\" className=\"btn btn-primary\">\n          觀看訊息\n        </button>\n        <Link to=\"/group/create\">\n          <button type=\"button\" className=\"btn btn-primary ml-3\">\n            新增群組\n          </button>\n        </Link>\n      </li>\n    </ul>\n  </React.Fragment>\n);\n\nexport default UserInfo;\n","import React, { FunctionComponent } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Card from 'src/shared/layout/Card/Card';\nimport { GroupOverviewItemProps } from './GroupOverviewItem.model';\nconst GroupOverviewItem: FunctionComponent<GroupOverviewItemProps> = props => {\n  return (\n    <Card\n      classes={['Card--button']}\n      body={\n        <ul>\n          <li className=\"d-flex align-items-center justify-content-between text-nowrap\">\n            <p className=\"col-md-3\">名字</p>\n            <p className=\"ml-md-2 font-weight-bold text-nowrap\">{props.name}</p>\n          </li>\n          <li className=\"d-flex align-items-center justify-content-between text-nowrap mt-3\">\n            <p className=\"col-md-3\">人數</p>\n            <p className=\"ml-md-2 font-weight-bold text-nowrap\">{props.stakeholders.length}</p>\n          </li>\n          <li className=\"d-flex align-items-center justify-content-between text-nowrap mt-3\">\n            <p className=\"col-md-3 text-nowrap\">目前狀況</p>\n            <p className=\"ml-md-2 font-weight-bold text-nowrap\">{props.balance}</p>\n          </li>\n          <li className=\"d-flex align-items-center justify-content-end mt-3\">\n            <Link to={'/group/' + props.id}>\n              <button type=\"button\" className=\"btn btn-primary\">\n                進入群組\n              </button>\n            </Link>\n          </li>\n        </ul>\n      }\n    ></Card>\n  );\n};\n\nexport default GroupOverviewItem;\n","import React, { FunctionComponent } from 'react';\n\nimport { GroupOverviewProps } from './GroupOverview.model';\nimport GroupOverviewItem from './GroupOverviewItem/GroupOverviewItem';\nimport './GroupOverview.scss';\nconst GroupOverview: FunctionComponent<GroupOverviewProps> = props => (\n  <div className=\"row\">\n    <div className=\"mt-3 col-12 Group\">\n      <h4>群組概況</h4>\n      <div className=\"row Group__Container\">\n        {props.items.map(item => (\n          <div key={item.id} className=\"col-12 col-md-6 col-xl-4 Group__Container__Item\">\n            <GroupOverviewItem {...item}></GroupOverviewItem>\n          </div>\n        ))}\n      </div>\n    </div>\n  </div>\n);\n\nexport default GroupOverview;\n","import React, { Component } from 'react';\nimport Card from 'src/shared/layout/Card/Card';\nimport UserInfo from 'src/auth/components/UserInfo/UserInfo';\nimport { GroupOverviewItemProps } from 'src/group/components/GroupOverview/GroupOverviewItem/GroupOverviewItem.model';\nimport Page from 'src/shared/layout/Page/Page';\nimport GroupOverview from 'src/group/components/GroupOverview/GroupOverview';\nclass UserPage extends Component {\n  render() {\n    const overview: GroupOverviewItemProps[] = [\n      {\n        id: '1oamfia2fjosmdl',\n        name: '測試一',\n        balance: -3000,\n        stakeholders: ['user1', 'user2', 'user3'],\n        managers: ['user1', 'user2', 'user3']\n      },\n      {\n        id: 'daswgeqeaead',\n        name: '測試二',\n        balance: -13000,\n        stakeholders: ['user1', 'user2', 'user3'],\n        managers: ['user1', 'user2', 'user3']\n      },\n      {\n        id: 'daswgeqeaeadasd',\n        name: '測試三',\n        balance: -10000,\n        stakeholders: ['user1', 'user2', 'user3'],\n        managers: ['user1', 'user2', 'user3']\n      }\n    ];\n    return (\n      <Page central={true}>\n        <h4>個人資訊</h4>\n        <Card classes={['mt-3']} body={<UserInfo />}></Card>\n        <div className=\"w-100\"></div>\n        <GroupOverview items={overview}></GroupOverview>\n      </Page>\n    );\n  }\n}\n\nexport default UserPage;\n","import { InputProps, InputType } from 'src/shared/forms/Input/Input.model';\nimport { DropdownProps } from 'src/shared/forms/Dropdown/Dropdown.model';\nimport { OptionItem } from 'src/shared/forms/forms.model';\nimport { GroupRole } from 'src/group/model/Group.model';\n\nexport interface GroupSettingFormProps {\n  name: InputProps;\n  stakeholders: Array<GroupStakeHolders>;\n  disabled?: boolean;\n}\n\nexport type GroupSettingFormState = GroupSettingFormProps & {\n  submitted: boolean;\n};\n\nexport interface GroupStakeHolders {\n  person: InputProps;\n  role: DropdownProps;\n}\n\nexport function getRoleOptions(): OptionItem<number>[] {\n  return [\n    {\n      id: GroupRole.Manager,\n      name: '管理員'\n    },\n    {\n      id: GroupRole.Member,\n      name: '一般成員'\n    }\n  ];\n}\n\nexport function getDefaultGroupSettingForm(): GroupSettingFormProps {\n  return {\n    name: {\n      inputType: InputType.Input,\n      config: {\n        placeholder: '請輸入群組名稱',\n        type: 'text'\n      },\n      value: '',\n      label: '名稱'\n    },\n    stakeholders: [getStakeholders()]\n  };\n}\n\nexport function getStakeholders(useLabel = true): GroupStakeHolders {\n  return {\n    person: {\n      inputType: InputType.Input,\n      config: {\n        placeholder: '請輸入成員ID',\n        type: 'text'\n      },\n      value: '',\n      label: useLabel ? '成員ID' : ''\n    },\n    role: {\n      label: useLabel ? '職位' : '',\n      options: getRoleOptions(),\n      change: (option: OptionItem<number>) => {\n        console.log(option);\n      },\n      selected: GroupRole.Member\n    }\n  };\n}\n","import React, { FunctionComponent } from 'react';\nimport { InputProps, InputType } from './Input.model';\n\nconst Input: FunctionComponent<InputProps> = props => {\n  const onInput = (value: string) => {\n    if (props.change) {\n      props.change(value);\n    }\n  };\n\n  return (\n    <div className=\"form-group\">\n      {props.label ? <label htmlFor={props.config.id}>{props.label}</label> : null}\n      {props.inputType === InputType.Input ? (\n        <input className=\"form-control\" {...props.config} onInput={$event => onInput(($event.target as HTMLInputElement).value)} />\n      ) : (\n        <textarea\n          className=\"form-control\"\n          {...props.config}\n          onInput={$event => onInput(($event.target as HTMLInputElement).value)}\n        ></textarea>\n      )}\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { Component } from 'react';\n\nimport Input from 'src/shared/forms/Input/Input';\nimport Dropdown from 'src/shared/forms/Dropdown/Dropdown';\nimport { GroupSettingFormProps, getStakeholders, GroupStakeHolders, GroupSettingFormState } from './GroupSettingForm.model';\nimport { OptionItem } from 'src/shared/forms/forms.model';\nimport { Redirect } from 'react-router-dom';\n\nclass GroupSettingForm extends Component<GroupSettingFormProps, GroupSettingFormState> {\n  get isDisabledSubmit(): boolean {\n    const isNameEmpty = this.state.name.value === '';\n    const isAnyStakeHolderEmpty = this.state.stakeholders.some((item: GroupStakeHolders) => item.person.value === '');\n    return this.state.disabled || isNameEmpty || isAnyStakeHolderEmpty;\n  }\n\n  addStakeholder = () => {\n    this.setState({\n      stakeholders: this.state.stakeholders.concat(getStakeholders(false))\n    });\n  };\n\n  removeStakeholder = (index: number) => {\n    this.setState({\n      stakeholders: this.state.stakeholders.filter((_, pos) => pos !== index)\n    });\n  };\n\n  onNameChange = (value: string) => {\n    this.setState({\n      name: { ...this.state.name, value }\n    });\n  };\n\n  onStakeHoldersIdChange = (value: string, index: number) => {\n    const stakeholders = this.state.stakeholders.slice();\n    stakeholders[index] = {\n      ...stakeholders[index],\n      person: {\n        ...stakeholders[index].person,\n        value\n      }\n    };\n    this.setState({\n      stakeholders\n    });\n  };\n\n  onRoleChange = (item: OptionItem<number>, index: number) => {\n    const stakeholders = this.state.stakeholders.slice();\n    stakeholders[index] = {\n      ...stakeholders[index],\n      role: {\n        ...stakeholders[index].role,\n        selected: item.id\n      }\n    };\n    this.setState({\n      stakeholders\n    });\n  };\n\n  onSubmit = () => {\n    const rand = Math.random() * 100;\n    if (rand > 20) {\n      alert('submit success');\n      this.setState({\n        submitted: true\n      });\n    } else {\n      alert('network error');\n    }\n  };\n\n  componentWillMount() {\n    this.setState({\n      name: { ...this.props.name },\n      stakeholders: this.props.stakeholders.map(item => ({ ...item })),\n      disabled: !!this.props.disabled\n    });\n  }\n\n  render() {\n    return (\n      <ul className=\"row\">\n        {this.state.submitted ? <Redirect to=\"/user\" /> : null}\n        <li className=\"col-12\">\n          <div className=\"row\">\n            <div className=\"col-12 col-md-8\">\n              <Input {...this.state.name} change={this.onNameChange}></Input>\n            </div>\n          </div>\n        </li>\n        <li className=\"w-100\"></li>\n        {this.state.stakeholders.map((stakeholder, index) => {\n          return (\n            <li className=\"col-12\" key={index}>\n              <div className=\"row align-items-center\">\n                <div className=\"col-5 col-sm-auto col-md-8\">\n                  <Input {...stakeholder.person} change={value => this.onStakeHoldersIdChange(value, index)}></Input>\n                </div>\n                <div className=\"col-5 col-sm-auto col-md-auto mb-3\">\n                  <Dropdown {...stakeholder.role} change={item => this.onRoleChange(item, index)}></Dropdown>\n                </div>\n                {index === 0 ? (\n                  <h3 className=\"col-2 col-sm-auto mt-4\">\n                    <i className=\"fas fa-plus yur-cursor-point\" onClick={this.addStakeholder}></i>\n                  </h3>\n                ) : (\n                  <h3 className=\"col-2 col-sm-auto\">\n                    <i className=\"fas fa-minus yur-cursor-point\" onClick={() => this.removeStakeholder(index)}></i>\n                  </h3>\n                )}\n              </div>\n            </li>\n          );\n        })}\n        <li className=\"col-12 text-right mt-3\">\n          <button disabled={this.isDisabledSubmit} type=\"button\" className=\"btn btn-primary\" onClick={this.onSubmit}>\n            送出\n          </button>\n        </li>\n      </ul>\n    );\n  }\n}\n\nexport default GroupSettingForm;\n","import React, { Component } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\n\nimport { GroupSettingState } from './GroupSetting.model';\nimport Page from 'src/shared/layout/Page/Page';\nimport Card from 'src/shared/layout/Card/Card';\nimport { getDefaultGroupSettingForm } from 'src/group/components/GroupSettingForm/GroupSettingForm.model';\nimport GroupSettingForm from 'src/group/components/GroupSettingForm/GroupSettingForm';\nclass GroupSetting extends Component<RouteComponentProps<{ id: string }>, GroupSettingState> {\n  state = {\n    groupId: '',\n    form: getDefaultGroupSettingForm()\n  };\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.setState({\n      groupId: id\n    });\n  }\n\n  render() {\n    return (\n      <Page central={true}>\n        <h4>{this.state.groupId ? '修改' : '創建'}群組資料</h4>\n        <div className=\"w-100 mt-4\"></div>\n        <Card body={<GroupSettingForm {...this.state.form}></GroupSettingForm>}></Card>\n      </Page>\n    );\n  }\n}\n\nexport default GroupSetting;\n","import React from 'react';\nimport { Route, HashRouter, Switch, Redirect } from 'react-router-dom';\nimport './App.scss';\n\nimport LoginPage from 'src/auth/containers/LoginPage/LoginPage';\nimport GroupDetail from 'src/group/containers/GroupDetail/GroupDetail';\nimport UserPage from 'src/auth/containers/UserPage/UserPage';\nimport GroupSetting from './group/containers/GroupSetting/GroupSetting';\n\nfunction App() {\n  return (\n    <HashRouter basename=\"/\">\n      <div className=\"App p-3\">\n        <Route path=\"/login\" component={LoginPage} />\n        <Switch>\n          <Route path=\"/group/create\" component={GroupSetting} />\n          <Route path=\"/group/edit/:id\" component={GroupSetting} />\n          <Route path=\"/group/:id\" component={GroupDetail} />\n        </Switch>\n        <Route path=\"/user\" component={UserPage} />\n        <Redirect to=\"/user\" from=\"/\" exact />\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}